# Workflow to build the parallelproj C/CUDA libs (incl. installation of CUDA)
name: Build C/python

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    env:
      MPLBACKEND: Agg  # https://github.com/orgs/community/discussions/26434

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # not building on mac-os because there is no OpenMP
        python-version: [ '3.9', '3.10', '3.11'] # no torch for python 3.12 so far

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/libparallelproj_install -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build C/CUDA libs with CMake
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target install

    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install python ${{ matrix.python-version }} dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        python -m pip install torch --index-url https://download.pytorch.org/whl/cpu
        pip install .
        
    - name: Lint with flake8 - python ${{ matrix.python-version }}
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # E203 seems not pep8 compatible, so we ignore it
        flake8 --count --show-source --statistics --max-line-length 127 --extend-ignore=E203 python/parallelproj

    - if: matrix.os == 'ubuntu-latest'
      name: Test with pytest - python ${{ matrix.python-version }}
      run: |
        pytest --cov-report term-missing --cov=python/parallelproj --cov-fail-under=100 -v test/        
      env: 
        PARALLELPROJ_C_LIB: ${{github.workspace}}/libparallelproj_install/lib/libparallelproj_c.so

    - if: matrix.os == 'windows-latest'
      name: Test with pytest - python ${{ matrix.python-version }}
      run: |
        pytest --cov-report term-missing --cov=python/parallelproj --cov-fail-under=100 -v test/        
      env: 
        PARALLELPROJ_C_LIB: ${{github.workspace}}\libparallelproj_install\bin\parallelproj_c.dll
